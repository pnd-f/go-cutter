name: Build and Release for macOS

on:
  push:
    tags:
      - "v*.*.*" # Триггер для тегов, например v1.0.0
  workflow_dispatch: # Ручной запуск через интерфейс GitHub Actions

jobs:
  build:
    name: Build macOS Binary
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20" # Укажите версию Go, используемую в вашем проекте

      - name: Install dependencies
        run: go mod tidy

      - name: Build macOS Binary
        run: |
          mkdir -p dist
          go build -o dist/go-cutter-darwin-amd64

      - name: Archive binary
        run: |
          tar -czvf dist/go-cutter-darwin-amd64.tar.gz -C dist go-cutter-darwin-amd64

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-binary
          path: dist/go-cutter-darwin-amd64.tar.gz

  release:
    name: Create Release and Upload Binary
    runs-on: macos-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install dependencies
        run: go mod tidy

      - name: Build macOS Binary
        run: |
          mkdir -p dist
          go build -o dist/go-cutter-darwin-amd64

      - name: Archive binary
        run: |
          tar -czvf dist/go-cutter-darwin-amd64.tar.gz -C dist go-cutter-darwin-amd64

      - name: Upload Release to GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/go-cutter-darwin-amd64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release ${{ github.ref_name }}
            This is an automated release of the macOS binary.
